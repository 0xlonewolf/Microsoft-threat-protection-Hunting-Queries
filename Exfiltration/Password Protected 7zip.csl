///////////////////////////////////////////////////////////////////////////////
// Password Protected 7zip
//
// One common technique leveraged by attackers is using archiving applications,
// such as 7zip, to package up files for exfiltration. In many cases, these 
// archives are protected with a password to make analysis more difficult.  This
// query identifies applications which leverage a command line pattern which 
// matches the 7zip command line executables to create or update an archive when
// a password is specified.  By detecting based on the command line we can avert
// attempts to dodge detection by renaming the application.
//
// Happy hunting!
/////////////////////////////////////////////////////////////////////////////////
DeviceProcessEvents
| where (ProcessCommandLine contains " a " or ProcessCommandLine contains " u ") and ProcessCommandLine contains " -p" // Basic filter to look for launch string
| extend SplitLaunchString = split(ProcessCommandLine, ' ') // Split on the space
| where array_length(SplitLaunchString) >= 5 and SplitLaunchString[1] =~ 'a' or SplitLaunchString[1] =~ 'u' // look for calls to archive or update an archive specifically as the first argument
| mv-expand SplitLaunchString // cross apply the array
| where SplitLaunchString startswith "-p" and strlen(SplitLaunchString) > 3 // -p is the password switch and is immediately followed by a password without a space
| extend Application = '7zip', ArchivePassword = substring(SplitLaunchString, 2, strlen(SplitLaunchString))
| project-reorder Application, ArchivePassword // Promote these fields to the left
